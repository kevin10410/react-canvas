{"version":3,"sources":["utils/Ball.js","utils/mathUtils.js","App.js","reportWebVitals.js","index.js"],"names":["Ball","x","y","velX","velY","color","size","update","width","height","draw","ctx","beginPath","fillStyle","arc","Math","PI","fill","this","random","min","max","floor","App","canvasRef","useRef","contextRef","requestRef","useState","balls","setBalls","loop","useCallback","current","fillRect","forEach","ball","requestAnimationFrame","useEffect","canvas","window","innerWidth","innerHeight","style","context","getContext","Array","reduce","acc","newBall","initBalls","ref","onMouseDown","nativeEvent","offsetX","offsetY","cancelAnimationFrame","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.268187b9.chunk.js","sourcesContent":["class Ball {\n  constructor(x, y, velX, velY, color, size) {\n    this.x = x;\n    this.y = y;\n    this.velX = velX;\n    this.velY = velY;\n    this.color = color;\n    this.size = size;\n  };\n\n  update = (width, height) => {\n    if ((this.x + this.size) >= width) {\n      this.velX = -(this.velX);\n    }\n  \n    if ((this.x - this.size) <= 0) {\n      this.velX = -(this.velX);\n    }\n  \n    if ((this.y + this.size) >= height) {\n      this.velY = -(this.velY);\n    }\n  \n    if ((this.y - this.size) <= 0) {\n      this.velY = -(this.velY);\n    }\n  \n    this.x += this.velX;\n    this.y += this.velY;\n  };\n\n  draw = ctx => {\n    ctx.beginPath();\n    ctx.fillStyle = this.color;\n    ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n};\n\nexport default Ball;\n","export const random = (min, max) => Math\n  .floor(Math.random() * (max - min + 1)) + min;\n","import { useRef, useState, useEffect, useCallback } from \"react\";\n\nimport Ball from './utils/Ball';\nimport { random } from './utils/mathUtils';\n\nfunction App() {\n  const amount = 10;\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const requestRef = useRef(null);\n  const [balls, setBalls] = useState([]);\n\n  const addBallHandler = ({ nativeEvent} ) => {\n    const { offsetX, offsetY } = nativeEvent;\n    const size = random(10, 20);\n    const newBall = new Ball(\n      offsetX,\n      offsetY,\n      random(-7,7),\n      random(-7,7),\n      'rgb(' + random(0,255) + ',' + random(0,255) + ',' + random(0,255) +')',\n      size\n    );\n\n    cancelAnimationFrame(requestRef.current);\n    setBalls(prevState => [...prevState, newBall]);\n  };\n\n  const initBalls = (width, height) => {\n    const balls = [...Array(amount)]\n      .reduce(acc => {\n        const size = random(10, 20);\n        const newBall = new Ball(\n          random(0 + size, width - size),\n          random(0 + size, height - size),\n          random(-7,7),\n          random(-7,7),\n          'rgb(' + random(0,255) + ',' + random(0,255) + ',' + random(0,255) +')',\n          size\n        );\n        return [ ...acc, newBall ]\n      }, []);\n\n    setBalls(balls);\n  };\n\n  const loop = useCallback(() => {\n    const width = canvasRef.current.width;\n    const height = canvasRef.current.height;\n\n    contextRef.current.fillStyle = 'rgba(0, 0, 0, 0.25)';\n    contextRef.current.fillRect(0, 0, width, height);\n\n    balls.forEach(ball => {\n      ball.draw(contextRef.current);\n      ball.update(width, height);\n    });\n\n    requestRef.current = requestAnimationFrame(loop);\n  }, [balls]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    canvas.style.width = `${window.innerWidth}px`;\n    canvas.style.height = `${window.innerHeight}px`;\n\n    const context = canvas.getContext('2d');\n    context.fillStyle = 'rgba(0, 0, 0, 0.25)';\n    context.fillRect(0, 0, window.innerWidth, window.innerHeight);\n    contextRef.current = context;\n    initBalls(window.innerWidth, window.innerHeight);\n  },[]);\n\n  useEffect(() => {\n    contextRef && loop();\n  }, [contextRef, loop]);\n\n  return (\n    <canvas\n      ref = { canvasRef }\n      onMouseDown = { addBallHandler }\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}